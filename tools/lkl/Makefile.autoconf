POSIX_HOSTS=elf64 elf32
KASAN_HOSTS=elf64-x86-64
NT_HOSTS=pe

define set_autoconf_var
  $(shell echo "#define LKL_HOST_CONFIG_$(1) $(2)" \
	  >> $(OUTPUT)/include/lkl_autoconf.h)
  $(shell echo "LKL_HOST_CONFIG_$(1)=$(2)" >> $(OUTPUT)/tests/autoconf.sh)
  export LKL_HOST_CONFIG_$(1)=$(2)
endef

define set_kernel_config_h
$(shell echo "#define $(1) $(2)" \
	  >> $(OUTPUT)/include/kernel_config.h)
endef

define set_kernel_config
$(shell echo "CONFIG_$(1)=$(2)" >> $(OUTPUT)/kernel.config)
endef

define find_include
  $(eval include_paths=$(shell $(CC) -E -Wp,-v -xc /dev/null 2>&1 | grep '^ '))
  $(foreach f, $(include_paths), $(wildcard $(f)/$(1)))
endef

define is_defined
$(shell $(CC) -dM -E - </dev/null | grep $(1))
endef

define android_host
  $(call set_autoconf_var,ANDROID,y)
endef

define bsd_host
  $(call set_autoconf_var,BSD,y)
endef

define arm_host
  $(call set_autoconf_var,ARM,y)
endef

define aarch64_host
  $(call set_autoconf_var,AARCH64,y)
endef

define virtio_net_dpdk
  $(call set_autoconf_var,VIRTIO_NET_DPDK,y)
  RTE_SDK ?= $(OUTPUT)/dpdk-19.02
  RTE_TARGET ?= build
  DPDK_LIBS = -lrte_pmd_vmxnet3_uio -lrte_pmd_ixgbe -lrte_pmd_e1000
  DPDK_LIBS += -lrte_pmd_virtio
  DPDK_LIBS += -lrte_timer -lrte_hash -lrte_mbuf -lrte_ethdev -lrte_eal
  DPDK_LIBS += -lrte_mempool -lrte_ring -lrte_pmd_ring
  DPDK_LIBS += -lrte_kvargs -lrte_net
  CFLAGS += -I$$(RTE_SDK)/$$(RTE_TARGET)/include -msse4.2 -mpopcnt
  LDFLAGS +=-L$$(RTE_SDK)/$$(RTE_TARGET)/lib
  LDFLAGS +=-Wl,--whole-archive $$(DPDK_LIBS) -Wl,--no-whole-archive -lm -ldl
endef

define virtio_net_vde
  $(call set_autoconf_var,VIRTIO_NET_VDE,y)
  LDLIBS += $(shell pkg-config --libs vdeplug)
endef

define posix_host
  $(call set_autoconf_var,POSIX,y)
  $(call set_autoconf_var,VIRTIO_NET,y)
  $(call set_autoconf_var,VIRTIO_NET_FD,y)
  $(if $(strip $(call find_include,linux/vfio.h)),$(call set_autoconf_var,VFIO_PCI,y))
  LDFLAGS += -pie
  CFLAGS += -fPIC -pthread
  SOSUF := .so
  $(if $(call is_defined,__ANDROID__),$(call android_host),LDLIBS += -lrt -lpthread)
  $(if $(filter $(1),elf64-x86-64-freebsd),$(call bsd_host))
  $(if $(filter $(1),elf32-littlearm),$(call arm_host))
  $(if $(filter $(1),elf64-littleaarch64),$(call aarch64_host))
  $(if $(filter yes,$(dpdk)),$(call virtio_net_dpdk))
  $(if $(filter yes,$(vde)),$(call virtio_net_vde))
  $(if $(strip $(call find_include,fuse.h)),$(call set_autoconf_var,FUSE,y))
  $(if $(strip $(call find_include,archive.h)),$(call set_autoconf_var,ARCHIVE,y))
  $(if $(strip $(call find_include,linux/if_tun.h)),$(call set_autoconf_var,VIRTIO_NET_MACVTAP,y))
  $(if $(filter $(1),elf64-x86-64-freebsd),$(call set_autoconf_var,NEEDS_LARGP,y))
  $(if $(filter $(1),elf32-i386),$(call set_autoconf_var,I386,y))
  $(if $(strip $(call find_include,jsmn.h)),$(call set_autoconf_var,JSMN,y))
endef

define nt64_host
  $(call set_autoconf_var,NEEDS_LARGP,y)
  $(call set_autoconf_var,VIRTIO_NET,y)
  $(call set_autoconf_var,NT64,y)
  CFLAGS += -Wl,--enable-auto-image-base -Wl,--image-base -Wl,0x10000000 \
	 -Wl,--out-implib=$(OUTPUT)liblkl.dll.a -Wl,--export-all-symbols \
	 -Wl,--enable-auto-import
  LDFLAGS +=-Wl,--image-base -Wl,0x10000000 -Wl,--enable-auto-image-base \
	   -Wl,--out-implib=$(OUTPUT)liblkl.dll.a -Wl,--export-all-symbols \
	   -Wl,--enable-auto-import -s
endef

define nt_host
  $(call set_autoconf_var,NT,y)
  KOPT = "KALLSYMS_EXTRA_PASS=1"
  KOPT += "HOSTCFLAGS=-Wno-char-subscripts"
  KOPT += "HOSTLDFLAGS=-s"
  LDLIBS += -lws2_32
  EXESUF := .exe
  SOSUF := .dll
  CFLAGS += -Iinclude/mingw32
  $(if $(filter $(1),pe-x86-64),$(call nt64_host))
endef

define s390_host
  $(call set_kernel_config_h,LKL_CONFIG_ENDIAN,1)
  $(call set_kernel_config,BIG_ENDIAN,y)
endef

define 64bit_host
  $(call set_kernel_config_h,LKL_CONFIG_64BIT,1)
  $(call set_kernel_config,64BIT,y)
endef

define kasan_x86_64
  $(call set_autoconf_var,KASAN_SHADOW_OFFSET,0x0000200000000000)
  $(call set_kernel_config,KASAN_SHADOW_OFFSET,0x0000200000000000)
  $(call set_autoconf_var,KASAN_SHADOW_SIZE,0x0000100000000000)
  $(call set_kernel_config,KASAN_SHADOW_SIZE,0x0000100000000000)
endef

define kasan_test_enable
  $(call set_autoconf_var,KASAN_TEST,y)
  $(call set_kernel_config,KUNIT,y)
  $(call set_kernel_config,BUILTIN_CMDLINE,\"kunit.filter_glob=\")
  $(call set_kernel_config,KASAN_KUNIT_TEST,y)
endef

define kasan_enable
  $(call set_autoconf_var,KASAN,y)
  $(call set_kernel_config,KASAN,y)
  # default is 20 which should be 1MB but observed 8MB of reserved
  # memory - half of what we use
  $(call set_kernel_config,STACK_HASH_ORDER,12)
  $(if $(filter $(1),elf64-x86-64),$(call kasan_x86_64))
  $(if $(filter yes,$(kasan_test)), $(call kasan_test_enable))
endef

define do_autoconf_gnu
  export CROSS_COMPILE := $(CROSS_COMPILE)
  export CC := $(CROSS_COMPILE)gcc
  export LD := $(CROSS_COMPILE)ld
  export AR := $(CROSS_COMPILE)ar
  $(eval LD := $(CROSS_COMPILE)ld)
  $(eval CC := $(CROSS_COMPILE)gcc)
  $(eval LD_FMT := $(shell $(LD) -r -print-output-format))
endef

define llvm_target_to_ld_fmt
  $(if $(filter $(CROSS_COMPILE),x86_64-linux-gnu),elf64-x86-64,\
    $(error Unsupported LLVM target $(CROSS_COMPILE)))
endef

define do_autoconf_llvm
  $(eval LLVM_PREFIX := $(if $(filter %/,$(LLVM)),$(LLVM)))
  $(eval LLVM_SUFFIX := $(if $(filter -%,$(LLVM)),$(LLVM)))
  export CROSS_COMPILE := $(CROSS_COMPILE)
  export CC := $(LLVM_PREFIX)clang$(LLVM_SUFFIX)
  export LD := $(LLVM_PREFIX)ld.lld$(LLVM_SUFFIX)
  export AR := $(LLVM_PREFIX)llvm-ar$(LLVM_SUFFIX)
  $(eval LD := $(LLVM_PREFIX)ld.lld$(LLVM_SUFFIX))
  $(eval CC := $(LLVM_PREFIX)clang$(LLVM_SUFFIX))
  $(eval LD_FMT := $(call llvm_target_to_ld_fmt))
endef

define do_autoconf_fuzzing
  export KCONFIG := fuzzing_defconfig
  export LLVM := 1
  export CROSS_COMPILE := x86_64-linux-gnu
  $(eval LLVM := 1)
  $(eval CROSS_COMPILE := x86_64-linux-gnu)
  $(eval kasan := yes)
  $(call set_kernel_config,LKL_FUZZING,y)
  $(if $(LKL_LINE_COV),$(call set_kernel_config,LKL_LINE_COV,y))
endef

define do_autoconf
  $(if $(LKL_FUZZING),$(call do_autoconf_fuzzing))
  $(if $(LLVM),$(call do_autoconf_llvm),$(call do_autoconf_gnu))
  $(eval EXEC_FMT := $(shell echo $(LD_FMT) | cut -d "-" -f1))
  $(call set_kernel_config,OUTPUT_FORMAT,\"$(LD_FMT)\")
  $(if $(or $(filter $(EXEC_FMT),elf64),$(filter $(LD_FMT),pe-x86-64)),$(call 64bit_host))
  $(if $(filter $(EXEC_FMT),elf64-s390),$(call s390_host))
  $(if $(filter $(EXEC_FMT),$(POSIX_HOSTS)),$(call posix_host,$(LD_FMT)))
  $(if $(filter $(EXEC_FMT),$(NT_HOSTS)),$(call nt_host,$(LD_FMT)))
  $(if $(and $(filter yes,$(kasan)),$(filter $(LD_FMT),$(KASAN_HOSTS))),$(call kasan_enable,$(LD_FMT)))
endef

export do_autoconf


$(OUTPUT)Makefile.conf: Makefile.autoconf
	$(shell mkdir -p $(OUTPUT)/include)
	$(shell mkdir -p $(OUTPUT)/tests)
	$(shell echo -n "" > $(OUTPUT)/include/lkl_autoconf.h)
	$(shell echo -n "" > $(OUTPUT)/include/kernel_config.h)
	$(shell echo -n "" > $(OUTPUT)/kernel.config)
	$(shell echo -n "" > $(OUTPUT)/tests/autoconf.sh)
	@echo "$$do_autoconf" > $(OUTPUT)/Makefile.conf
